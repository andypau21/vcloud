---
- name: Crear organización en vCloud Director
  hosts: localhost
  gather_facts: false

  # Define las variables necesarias
  vars:
    vcloud_host: "{{ vcloud_host }}"  # Reemplaza con la IP o nombre del host de vCloud Director
    vcloud_user: "{{ vcloud_username }}"  # Reemplaza con el usuario de vCloud Director
    vcloud_password: "{{ vcloud_password }}"  # Reemplaza con la contraseña del usuario
    vcloud_org: "{{ vcloud_org_name }}"  # Nombre de la organización a la que pertenece el usuario (opcional)
    vcloud_verify_ssl: "True"  # Verificar el certificado SSL del servidor
    org_name: "NuevaOrg"  # Nombre de la nueva organización a crear
    full_name: "Organización Nueva"  # Nombre completo de la organización

  # Tareas del playbook
  tasks:
    # 1. Validar conexión a vCloud Director
    - name: Validar conexión a vCloud Director
      command: >
        python3 -c "
        from pyvcloud.vcd.client import BasicLoginCredentials, Client;
        client = Client('{{ vcloud_host }}', verify_ssl_certs={{ vcloud_verify_ssl }});
        client.set_credentials(BasicLoginCredentials('{{ vcloud_user }}', '{{ vcloud_org }}', '{{ vcloud_password }}'));
        print('Conexión exitosa');
        client.logout();
        "
      register: validation_output
      failed_when: "'Conexión exitosa' not in validation_output.stdout"

    # 2. Crear organización en vCloud Director
    - name: Crear organización en vCloud Director
      command: >
        python3 -c "
        from pyvcloud.vcd.org import Org;
        from pyvcloud.vcd.client import BasicLoginCredentials, Client;
        client = Client('{{ vcloud_host }}', verify_ssl_certs={{ vcloud_verify_ssl }});
        client.set_credentials(BasicLoginCredentials('{{ vcloud_user }}', '{{ vcloud_org }}', '{{ vcloud_password }}'));
        org = Org(client, resource=client.get_org());
        org.create_org(
          name='{{ org_name }}',
          full_name='{{ full_name }}',
          is_enabled=True
        );
        print('Organización creada exitosamente');
        client.logout();
        "
      register: creation_output
      failed_when: "'Organización creada exitosamente' not in creation_output.stdout"

    # 3. Mostrar resultados
    - name: Mostrar resultados
      debug:
        msg:
          - "Conexión: {{ validation_output.stdout }}"
          - "Creación: {{ creation_output.stdout }}"