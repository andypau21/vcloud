---
- name: Crear organización en vCloud Director
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Establecer variables necesarias
      ansible.builtin.set_fact:
        vcloud_host: "{{ vcloud_host }}"
        vcloud_user: "{{ vcloud_user }}"
        vcloud_password: "{{ vcloud_password }}"
        vcloud_org: "{{ vcloud_org }}"
        vcloud_verify_ssl: "True"
        org_name: "NuevaOrg"
        full_name: "Organización Nueva"

    - name: Validar conexión a vCloud Director
      ansible.builtin.command:
        cmd: >
          python3 -c "
from pyvcloud.vcd.client import BasicLoginCredentials, Client;
client = Client('{{ vcloud_host }}', verify_ssl_certs={{ vcloud_verify_ssl }});
client.set_credentials(BasicLoginCredentials('{{ vcloud_user }}', '{{ vcloud_org }}', '{{ vcloud_password }}'));
print('Conexión exitosa');
client.logout();
"
      register: validation_output
      failed_when: "'Conexión exitosa' not in validation_output.stdout"

    - name: Crear organización en vCloud Director
      ansible.builtin.command:
        cmd: >
          python3 -c "
from pyvcloud.vcd.org import Org;
from pyvcloud.vcd.client import BasicLoginCredentials, Client;
client = Client('{{ vcloud_host }}', verify_ssl_certs={{ vcloud_verify_ssl }});
client.set_credentials(BasicLoginCredentials('{{ vcloud_user }}', '{{ vcloud_org }}', '{{ vcloud_password }}'));
org = Org(client, resource=client.get_org());
org.create_org(
  name='{{ org_name }}',
  full_name='{{ full_name }}',
  is_enabled=True
);
print('Organización creada exitosamente');
client.logout();
"
      register: creation_output
      failed_when: "'Organización creada exitosamente' not in creation_output.stdout"

    - name: Mostrar resultados
      debug:
        msg:
          - "Conexión: {{ validation_output.stdout }}"
          - "Creación: {{ creation_output.stdout }}"

